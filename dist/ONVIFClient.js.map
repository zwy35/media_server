{"version":3,"file":"ONVIFClient.js","sourceRoot":"","sources":["../lib/ONVIFClient.ts"],"names":[],"mappings":";;AAAA,6CAAsC;AAEtC,qCAAqC;AACrC,MAAqB,WAAY,SAAQ,oBAAU;IACjD,YAAY,QAAgB,EAAE,QAAgB;QAC5C,KAAK,CAAC,QAAQ,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC,CAAC;IACzD,CAAC;IAED,KAAK,CAAC,QAAQ,CAAC,IAAU,EAAE,EAAS;QAClC,MAAM,GAAG,GAAG;YACV,OAAO,EAAE,IAAI,CAAC,QAAQ;YACtB,SAAS,EAAE,KAAK;YAChB,KAAK,EAAE,SAAS,IAAI,CAAC,WAAW,EAAE,GAAG;SACtC,CAAC;QAEF,IAAI,EAAE,EAAE;YACN,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;SAC/B;QAED,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,IAAW,EAAE,EAAS;QACtC,MAAM,GAAG,GAAQ;YACf,OAAO,EAAE,IAAI,CAAC,QAAQ;YACtB,cAAc,EAAE,IAAI;YACpB,KAAK,EAAE,MAAM;SACd,CAAC;QAEF,IAAI,IAAI,EAAE;YACR,GAAG,CAAC,KAAK,GAAG,SAAS,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC;YAC3C,IAAI,EAAE,EAAE;gBACN,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;aAC/B;SACF;QAED,MAAM,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AArCD,8BAqCC","sourcesContent":["import RTSPClient from \"./RTSPClient\";\n\n// RTSP client with ONVIF extensions.\nexport default class ONVIFClient extends RTSPClient {\n  constructor(username: string, password: string) {\n    super(username, password, { Require: \"onvif-replay\" });\n  }\n\n  async playFrom(from: Date, to?: Date) {\n    const obj = {\n      Session: this._session,\n      Immediate: 'yes',\n      Range: `clock=${from.toISOString()}-`\n    };\n\n    if (to) {\n      obj.Range += to.toISOString();\n    }\n\n    await this.request(\"PLAY\", obj);\n    return this;\n  }\n\n  async playReverse(from?: Date, to?: Date) {\n    const obj: any = {\n      Session: this._session,\n      'Rate-Control': 'no',\n      Scale: '-1.0'\n    };\n\n    if (from) {\n      obj.Range = `clock=${from.toISOString()}-`;\n      if (to) {\n        obj.Range += to.toISOString();\n      }\n    }\n\n    await this.request(\"PLAY\", obj);\n    return this;\n  }\n}\n"]}