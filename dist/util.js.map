{"version":3,"file":"util.js","sourceRoot":"","sources":["../lib/util.ts"],"names":[],"mappings":"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","sourcesContent":["import { createHash } from \"crypto\";\nimport { spawn } from \"child_process\";\n\nexport interface RTPPacket {\n  id: number;\n  timestamp: number;\n  marker: number;\n\n  payload: Buffer;\n  length: number;\n\n  payloadType: number;\n}\n\nexport function parseRTPPacket(buffer: Buffer): RTPPacket {\n  const padding = (buffer[0] >> 5) & 0x01\n  const hasExtensions = (buffer[0] >> 4) & 0x01;\n  const marker = (buffer[1]) >>> 7;\n  const payloadType = buffer[1] & 0x7f;\n  const num_csrc_identifiers = (buffer[0] & 0x0F);\n\n  const payload = buffer.slice((num_csrc_identifiers * 4) + (hasExtensions ? 16 : 12));\n  const { length } = payload;\n\n  return {\n    id: buffer.readUInt16BE(2),\n    timestamp: buffer.readUInt32BE(4),\n    marker,\n    payload,\n    length,\n    payloadType\n  };\n}\n\nexport interface RTCPPacket {\n  timestamp: number;\n  packetType: number;\n\n  buffer: Buffer;\n}\n\nexport function parseRTCPPacket(buffer: Buffer): RTCPPacket {\n  const packetType = buffer[1];\n  const timestamp = buffer.readUInt32BE(16);\n\n  return {\n    timestamp,\n    packetType,\n    buffer\n  };\n}\n\n// utility function for using crypto library\nexport function getMD5Hash(str: string): string {\n  const md5 = createHash(\"md5\");\n  md5.update(str);\n\n  return md5.digest(\"hex\");\n}\n\ninterface Transport {\n  protocol: string;\n  parameters: { [key: string]: string };\n}\n\nexport function parseTransport(transport: string): Transport {\n  const parameters: { [key: string]: string } = {};\n\n  const parts = transport.split(\";\");\n  const protocol = parts[0];\n\n  for (let i = 0; i < parts.length; i++) {\n    const part = parts[i];\n    const index = part.indexOf(\"=\");\n\n    if (index > -1 && index !== part.length - 1) {\n      parameters[part.substring(0, index)] = part.substring(index + 1);\n    }\n  }\n  \n  return {\n    protocol,\n    parameters\n  };\n}\n\nexport function randInclusive(min: number, max: number): number {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nexport function generateSSRC(): number {\n  return randInclusive(1, 0xffffffff);\n}\n\n// BitStream classse by 2018 Roger Hardiman, RJH Technical Consultancy Ltd\n// Write to a bitstream and read back as an array\n\nexport class BitStream {\n\n  data: number[] = []; // Array only stores 0 or 1 (one 'bit' per buffer item)\n                           // not very efficienet on memory\n\n  // Constructor\n  constructor(){\n  }\n\n  // Functions\n  AddValue(value: number, num_bits: number) {\n      // Add each bit to the List\n      for (let i = num_bits-1; i >= 0; i--) {\n          this.data.push((value>>i) & 0x01);\n      }\n  }\n\n  AddHexString(hex_string: string) {\n      let hex_chars = hex_string.toUpperCase();\n\n      for(let x = 0; x < hex_chars.length; x++) {\n          let c = hex_chars.charAt(x);\n          if (c=='0') this.AddValue(0,4);\n          else if (c=='1') this.AddValue(1, 4);\n          else if (c=='2') this.AddValue(2, 4);\n          else if (c=='3') this.AddValue(3, 4);\n          else if (c=='4') this.AddValue(4, 4);\n          else if (c=='5') this.AddValue(5, 4);\n          else if (c=='6') this.AddValue(6, 4);\n          else if (c=='7') this.AddValue(7, 4);\n          else if (c=='8') this.AddValue(8, 4);\n          else if (c=='9') this.AddValue(9, 4);\n          else if (c=='A') this.AddValue(10, 4);\n          else if (c=='B') this.AddValue(11, 4);\n          else if (c=='C') this.AddValue(12, 4);\n          else if (c=='D') this.AddValue(13, 4);\n          else if (c=='E') this.AddValue(14, 4);\n          else if (c=='F') this.AddValue(15, 4);\n      }\n  }\n\n  Read(num_bits: number) {\n      // Read and remove items from the front of the list of bits\n      if (this.data.length < num_bits) return 0;\n      let result = 0;\n      for (let i = 0; i < num_bits; i++) {\n          result = result << 1;\n          result = result + this.data[0];\n          this.data.shift(); // remove the first item from the array\n      }\n      return result;\n  }\n\n  ToArray() {\n      let num_bytes = Math.ceil(this.data.length/8.0);\n      let array = new Buffer(num_bytes);\n      let ptr = 0;\n      let shift = 7;\n      for (let i = 0; i < this.data.length; i++) {\n          array[ptr] += (this.data[i] << shift);\n          if (shift == 0) {\n              shift = 7;\n              ptr++;\n          }\n          else {\n              shift--;\n          }\n      }\n\n      return array;\n  }\n}\n"]}